#!/usr/bin/env python3
from os import popen as pp
from os import listdir as ls
from os import mkdir, system
from toml import load, dump
from os.path import exists, expanduser, join
def create_cache_if_not_exists():
    if not exists(expanduser("~/.cache/cmddm")):
        mkdir(expanduser("~/.cache/cmddm"))
    else:
        pass

def check_configs():
    if not exists(expanduser("~/.config/cmddm.toml")):
        filenew = open(expanduser("~/.config/cmddm.toml"), "a")
        new_config_dict = {"default_entry": "cmd", "wait_for_selection": True, "startup": {"run_before_session_initialisation": ["echo dummycmd"], "run_after_session_initialisation": ["echo dummycmd"]}}
        dump(new_config_dict, filenew)
        filenew.close()


def read_configs():
    return load(expanduser("~/.config/cmddm.toml"))
    
def start_session(session):
    print(session)
    with open(join("/usr/share/xsessions", (session+".desktop")), "r") as desktop_file:
        for item in desktop_file.readlines():
            if "exec" in item.lower():
                sessionname = item.split("Exec=")[1].strip()
    with open(expanduser("~/.cache/cmddm/temp_xinitrc"), "w") as temp_file:
        for item in configs["startup"]["run_before_session_initialisation"]:
            temp_file.write(item+"\n")
        temp_file.write(sessionname+"\n")
    with open(expanduser("~/.cache/cmddm/temp_xinitrc"), "a") as temp_file:
        for item in configs["startup"]["run_after_session_initialisation"]:
            temp_file.write(item+"\n")
    with open(expanduser("~/.cache/cmddm/temp_xinitrc_shell"), "w") as temp_file:
        temp_file.write("startx {}".format(expanduser("~/.cache/cmddm/temp_xinitrc")))
    pp("chmod +x {}".format(expanduser("~/.cache/cmddm/temp_xinitrc")))
    pp("chmod +x {}".format(expanduser("~/.cache/cmddm/temp_xinitrc_shell")))
    system(expanduser("~/.cache/cmddm/temp_xinitrc_shell"))

def main():
    global configs
    create_cache_if_not_exists()
    check_configs()
    configs = read_configs()
    sessions = list(map(lambda x: x.split(".desktop")[0], ls("/usr/share/xsessions")))
    sessions.append("cmd")
    if len(sessions) == 0:
        print("No session found")
    if len(sessions) == 1 and sessions[0] == "cmd":
        exit()
    if len(sessions) > 1:
        if configs["wait_for_selection"]:
            for item in enumerate(sessions, start=1):
                print("[{}] {}".format(item[0], item[1]))
            print("Enter the session to be started")
            try:
                session_to_start = int(input(">> "))
            except:
                print("Could not find session. Starting the default entry: {}".format(configs["default_entry"]))
                exit()
                if configs["default_entry"] == "cmd":
                    exit()
                else:
                    start_session(configs["default_entry"])
            if sessions[session_to_start-1] == "cmd":
                exit()
            else:
                start_session(sessions[session_to_start-1])
        else:
            if configs["default_entry"] == "cmd":
                exit()
            else:
                start_session(configs["default_entry"])
main()
